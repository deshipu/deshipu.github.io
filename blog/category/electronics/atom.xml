<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">dopieralski.pl - Posts in electronics</title>
  <id>http://dopieralski.pl/blog/category/electronics/atom.xml</id>
  <updated>2020-01-02T00:00:00Z</updated>
  <link href="http://dopieralski.pl/" />
  <link href="http://dopieralski.pl/blog/category/electronics/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.9.5">ABlog</generator>
  <entry xml:base="http://dopieralski.pl/blog/category/electronics/atom.xml">
    <title type="text">CircuitPython in 2020</title>
    <id>http://dopieralski.pl/posts/2020-01-02-circuitpython/</id>
    <updated>2020-01-02T00:00:00Z</updated>
    <published>2020-01-02T00:00:00Z</published>
    <link href="http://dopieralski.pl/posts/2020-01-02-circuitpython/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;circuitpython-in-2020&quot;&gt;

&lt;p&gt;It looks like I’m mostly using this blog to answer &lt;a class=&quot;reference external&quot; href=&quot;https://blog.adafruit.com/2020/01/01/what-do-you-want-from-circuitpython-in-2020-circuitpython2020-circuitpython/&quot;&gt;Adafruit’s prompts for
feedback on CircuitPython&lt;/a&gt;. Oh well, so be it.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-projects&quot;&gt;
&lt;h2&gt;The Projects&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;pewpew&quot;&gt;
&lt;h3&gt;PewPew&lt;/h3&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: INFO/1 (&lt;tt class=&quot;docutils&quot;&gt;/home/sheep/dev/blog/blog/posts/2020-01-02-circuitpython.rst&lt;/tt&gt;, line 6); &lt;em&gt;&lt;a href=&quot;#id1&quot;&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Duplicate implicit target name: “pewpew”.&lt;/div&gt;
&lt;p&gt;The &lt;a class=&quot;reference external&quot; href=&quot;http://pewpew.rtfd.io&quot;&gt;PewPew&lt;/a&gt; educational game console project is still
alive, and there has been some progress. EuroPython gave out 1400 devices to
Python developers at a conference, and I helped design and manufacture some
custom units for some more conferences. &lt;a class=&quot;reference external&quot; href=&quot;http://makerfabs.com&quot;&gt;MakerFabs&lt;/a&gt; —
the fabrication company that is helping me with this is now selling PewPew
Standalone consoles for $10 a piece for everyone who have any kind of workshop,
entertainment or hacking needs. There is even a mailing list at
&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pewpew&amp;#64;python.org&lt;/span&gt;&lt;/code&gt; and I’m trying to keep everyone updated by sending
monthly summaries to it (I only skipped one month so far).&lt;/p&gt;
&lt;p&gt;However, the device is not perfect, and I have decided to pursue the successor
to &lt;a class=&quot;reference external&quot; href=&quot;http://ugame.rtfd.io&quot;&gt;µGame&lt;/a&gt; to try an fix that. It’s a blend of PewPew
and µGame, being able to run programs for both (and also MakerCode Arcade and
PyGamer/PyBadge device too). It’s going to be considerably cheaper than
Adafruit’s offerings, but it’s also not supposed to be competing with them.
I needed the display to show the error messages, because those turned out to
be the hardest part of working with PewPews — not everyone can get the REPL
going easily. In any case, I worked on the successor, PewPew M4 for a good part
of the last year, and it’s ready now. I’m going to be sending out the first
units to reviewers and people interested in development for it soon, and then
we will try to make the devices available through MakerFabs just like the
PewPew Standalone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;robots&quot;&gt;
&lt;h3&gt;Robots&lt;/h3&gt;
&lt;p&gt;I still have the low-cost spider-like walking robots on my drawing boards, and
they are going to run CircuitPython too. The plan to re-start the development
with a more integrated Kubik M0 unfortunately failed: after fixing some bugs
with PWM channels, it turned out that the SAMD21 that I was using simply
doesn’t have enough PWM outputs to drive all the 12 servos of this robot. That
means I probably need a bigger chip, and it would probably make more sense to
use the BLE-capable NRF52840 and not the SAMD51. But that also means it will be
Kubik M4 and not M0, and I still need to do my research about the NRF52840. I
have the NRF52840 Feather at hand, but it’s the non-express version, which is
apparently no longer supported. So either I bring back the support for it, hack
an SPI flash chip on it, or switch to an express board. We will see.&lt;/p&gt;
&lt;p&gt;In the mean time, I also resurrected the SpiderWing, which can work with pretty
much any Feather board. The recent modifications added battery protection to
it, which is an important feature. I will use it for a platform for
experimenting with BLE robots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;keyboards&quot;&gt;
&lt;h3&gt;Keyboards&lt;/h3&gt;
&lt;p&gt;After visiting a local annual meetup of mechanical keyboard enthusiasts, I got
an urge to make a very flat keyboard (just a PCB and low-profile choc
switches), and since I didn’t have much room on it, I decided to put a SAMD21
on it. Once I had that, it was very easy to write a simple firmware for it,
especially since the USB support really improved recently. There was no support
for CapsLock, but it was surprisingly easy to hack it on with the help of
Adafruit staff, and there is now a pull request in works for adding it
properly. The ability to disable the drive, midi, mouse and all those other
funky USB endpoints also helped a lot.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;circuitpython-development&quot;&gt;
&lt;h2&gt;CircuitPython Development&lt;/h2&gt;
&lt;p&gt;I ended up not contributing as much as I wanted to CircuitPython development
this last year, but I am still amazed with the progress it made. The display
support is now very good, and there is no need for my TextMode library anymore.
You can do pretty much anything with the displayio that you could do with the
stage library, and much more on top of that. The stage is still a little bit
faster and uses a bit less memory (because of the limitations it has), so I
keep using and maintaining it.&lt;/p&gt;
&lt;p&gt;I still didn’t have any time to play with the wireless capabilities: the Nina
firmware, the awesome BLE work, the LoRa and other radio modules. Maybe this
year I will have more luck with it.&lt;/p&gt;
&lt;p&gt;I did add (non-animated) GIF support to the loadimage library (and also to
stage), and it could easily be extended to support animation as well. I also
did some small improvement with buffer allocation for the audio module, and
that CapsLock support thing most recently — but I would really love to do more.&lt;/p&gt;
&lt;p&gt;I didn’t get to implement any of my last-year crazy project ideas. They are up
for grabs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;micropython-development&quot;&gt;
&lt;h2&gt;MicroPython Development&lt;/h2&gt;
&lt;p&gt;Even though I no longer pay much attention to that project, I did notice some
progress in there. Most importantly for me, there is now some support for
dynamically loadable C modules, so I tried to port the Stage library to that.
Unfortunately it doesn’t seem to be mature/featurefull/finished enough for it
to work, and the help is as usual non-existent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;future-plans&quot;&gt;
&lt;h2&gt;Future Plans&lt;/h2&gt;
&lt;p&gt;I don’t really have any are in CircuitPython right now that I would
particularly want to work on and improve. I really want to give more focus
to the PewPew, the Stage library, and the examples and tutorials for it.&lt;/p&gt;
&lt;p&gt;I would also love to see the PewPew M4 become popular/useful, and people
writing games for it. I think there is a need for some place where people
can find CircuitPython-based games for the µGame, PyBadge, PyGamer, PyPortal,
and PewPew M4, download and play them, see the code, read the tutorials about
making them, and so on. I also think it would be nice if game creators could
sell their games — I’m thinking about a platform like itch.io for this.&lt;/p&gt;
&lt;p&gt;I want to get back to the robots for a little bit, and I have some nice ideas
for them, though nothing overly specific yet. We will see how it goes with the
wireless communication research.&lt;/p&gt;
&lt;p&gt;I’m waiting with bated breath for the ESP32-S2 board, but it will be probably
another year or two before CircuitPython works on that (if ever).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;summary&quot;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;It has been an amazing year for CircuitPython, and a huge amount of work has
been done. I wish I could have been more involved, but day job interferes. I’m
going to bring back some of my old projects this year and see if I can make
them work even better with CircuitPython now.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://dopieralski.pl/blog/category/electronics/atom.xml">
    <title type="text">CircuitPython in 2019</title>
    <id>http://dopieralski.pl/posts/2019-01-04-circuitpython/</id>
    <updated>2019-01-04T00:00:00Z</updated>
    <published>2019-01-04T00:00:00Z</published>
    <link href="http://dopieralski.pl/posts/2019-01-04-circuitpython/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;circuitpython-in-2019&quot;&gt;

&lt;p&gt;Adafruit has requested &lt;a class=&quot;reference external&quot; href=&quot;https://blog.adafruit.com/2018/12/17/what-do-you-want-from-circuitpython-in-2019-circuitpython2019-circuitpython/&quot;&gt;on their blog&lt;/a&gt;
feedback and comments about CircuitPython in 2019, so here I go. I am mostly
going to talk about three things: the projects that I personally want to do
using it, the ongoing developments that I would love to see finished this year,
and some completely crazy stuff that could potentially be added if someone
smarter than me and with copious free time worked on it.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-projects&quot;&gt;
&lt;h2&gt;The Projects&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;pewpew&quot;&gt;
&lt;h3&gt;PewPew&lt;/h3&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: INFO/1 (&lt;tt class=&quot;docutils&quot;&gt;/home/sheep/dev/blog/blog/posts/2019-01-04-circuitpython.rst&lt;/tt&gt;, line 6); &lt;em&gt;&lt;a href=&quot;#id1&quot;&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Duplicate implicit target name: “pewpew”.&lt;/div&gt;
&lt;p&gt;The immediate thing with highest priority right now is the &lt;a class=&quot;reference external&quot; href=&quot;http://pewpew.rtfd.io&quot;&gt;PewPew&lt;/a&gt; educational game console, and the workshop I’m
planning to run with it really soon now (™). I’m rather happy with the hardware
and the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pew&lt;/span&gt;&lt;/code&gt; library on it, but I need to work on preparing more learning
materials and example games for it. I also need to reorganize the repository to
make it easier to follow and contribute to it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;game-and-successors&quot;&gt;
&lt;h3&gt;µGame and Successors&lt;/h3&gt;
&lt;p&gt;A much lower priority thing is to write those games that I have built the
&lt;a class=&quot;reference external&quot; href=&quot;http://ugame.rtfd.io&quot;&gt;µGame&lt;/a&gt; for, and possibly also port/rewrite those games
for Adafruit’s game console when it is finally released. That is probably not
going to happen very soon, though, so I have some time. If motivation suffices,
I will probably also improve the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;stage&lt;/span&gt;&lt;/code&gt; game library that µGame uses, and
create more ready-to-use resources for it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;kubik-and-tote&quot;&gt;
&lt;h3&gt;Kubik and Tote&lt;/h3&gt;
&lt;p&gt;While the homebrew game consoles took most of my free time last year, this year
I want to come back to my robots for a bit. In particular, I want to finish the
design and programming of ESP8266-based version of &lt;a class=&quot;reference external&quot; href=&quot;http://tote.rtfd.io&quot;&gt;Tote&lt;/a&gt;, and to finish the Kubik M0 robot (possibly switching
it to NRF52 in the process). There is also a number of old robots I would like
to re-visit and finish, such as the &lt;a class=&quot;reference external&quot; href=&quot;https://hackaday.io/project/7168-logicoma-kun&quot;&gt;Logicoma-kun&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;https://hackaday.io/project/10665-pony-bot&quot;&gt;Pony Bot&lt;/a&gt;, and &lt;a class=&quot;reference external&quot; href=&quot;https://hackaday.io/project/10534-hexapod-henk-mkii&quot;&gt;Henk the Hexapod&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also need to explore more better ways of doing inverse kinematics,
interpreting accelerometer output, reacting to touch sensors on the legs, and
possibly also to force sensors in the joints and complaint motion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;badges-and-wearables&quot;&gt;
&lt;h3&gt;Badges and Wearables&lt;/h3&gt;
&lt;p&gt;The CircuitPython Badge project is suspended, as the people who wanted to work
with me to get it to conferences gave up on it, but if there is a Python
conference that wants it, I might work on it again.&lt;/p&gt;
&lt;p&gt;I also have this wearable hub prototype, for which I want to make some
interactive jewelry and accessories. No idea about anything specific yet, but I
think I will have cat ears for sure, at the least. Maybe also a video pendant.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;circuitpython-development&quot;&gt;
&lt;h2&gt;CircuitPython Development&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;textmode-library&quot;&gt;
&lt;h3&gt;TextMode Library&lt;/h3&gt;
&lt;p&gt;I really want to write a CircuitPython library that would let you do something
like the old DOS text mode display, and that would support a variety of
different displays and fonts. I already have some prototypes for OLED and TFT
displays, but I need to sit down and bring it all together with a consistent
API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;built-in-display-support&quot;&gt;
&lt;h3&gt;Built-in Display Support&lt;/h3&gt;
&lt;p&gt;I’m waiting with bated breath for the built-in support for displays that is
being worked on. It will not only make it trivially easy to display the errors
and the REPL console on any display connected to CircuitPython boards, but also
let do high-performance graphic operations, and create games like on the µGame.
This is probably also a prerequisite for that game console board to be released
by Adafruit, so I really can’t wait for it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;wireless-communication&quot;&gt;
&lt;h3&gt;Wireless Communication&lt;/h3&gt;
&lt;p&gt;There is a new library for using ESP8266 as a WiFi module in the AT mode, but
also some improvement to the RFM9x module support, and of course support for
NRF52 chips means there is Bluetooth support coming. I’m really looking forward
to being able to use any of those in CircuitPython, and I hope that the coming
year will bring a standardised and consistent API for wireless communication.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;crazy-project-ideas&quot;&gt;
&lt;h2&gt;Crazy Project Ideas&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;speech-synthesizer&quot;&gt;
&lt;h3&gt;Speech Synthesizer&lt;/h3&gt;
&lt;p&gt;The same speech synthesizer that is used to make the Micro:bit talk should be
very easy to port to CircuitPython, and should even have much better sound
quality by using the DAC.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;speech-recognition&quot;&gt;
&lt;h3&gt;Speech Recognition&lt;/h3&gt;
&lt;p&gt;At the same time, it might be possible to use the stronger M4 boards to do
trigger word recognition, using the same algorithm as the Snowboy program for
Raspberry Pi. This requires a lot of knowledge and patience that I don’t have,
but it could be potentially very useful project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;summary&quot;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;That’s all I have right now. As you can see, there is a lot of hope and very
few promises. That’s because the trend in the recent years is for me to have
less and less time and motivation for my projects. Perhaps the trend will
reverse at some point, but until then I try to not plan ahead too much.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
