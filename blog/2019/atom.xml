<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://dopieralski.pl/</id>
  <title>dopieralski.pl - Posted in 2019</title>
  <updated>2024-07-29T18:41:39.757772+00:00</updated>
  <link href="http://dopieralski.pl/"/>
  <link href="http://dopieralski.pl/blog/2019/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://dopieralski.pl/posts/2019-01-04-circuitpython/</id>
    <title>CircuitPython in 2019</title>
    <updated>2019-01-04T00:00:00+01:00</updated>
    <content type="html">&lt;section id="circuitpython-in-2019"&gt;

&lt;p&gt;Adafruit has requested &lt;a class="reference external" href="https://blog.adafruit.com/2018/12/17/what-do-you-want-from-circuitpython-in-2019-circuitpython2019-circuitpython/"&gt;on their blog&lt;/a&gt;
feedback and comments about CircuitPython in 2019, so here I go. I am mostly
going to talk about three things: the projects that I personally want to do
using it, the ongoing developments that I would love to see finished this year,
and some completely crazy stuff that could potentially be added if someone
smarter than me and with copious free time worked on it.&lt;/p&gt;
&lt;section id="the-projects"&gt;
&lt;h2&gt;The Projects&lt;/h2&gt;
&lt;section id="pewpew"&gt;
&lt;h3&gt;PewPew&lt;/h3&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/sheep/dev/ablog/dopieralski.pl/posts/2019-01-04-circuitpython.rst&lt;/span&gt;, line 6); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate implicit target name: “pewpew”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;The immediate thing with highest priority right now is the &lt;a class="reference external" href="http://pewpew.rtfd.io"&gt;PewPew&lt;/a&gt; educational game console, and the workshop I’m
planning to run with it really soon now (™). I’m rather happy with the hardware
and the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pew&lt;/span&gt;&lt;/code&gt; library on it, but I need to work on preparing more learning
materials and example games for it. I also need to reorganize the repository to
make it easier to follow and contribute to it.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="game-and-successors"&gt;
&lt;h3&gt;µGame and Successors&lt;/h3&gt;
&lt;p&gt;A much lower priority thing is to write those games that I have built the
&lt;a class="reference external" href="http://ugame.rtfd.io"&gt;µGame&lt;/a&gt; for, and possibly also port/rewrite those games
for Adafruit’s game console when it is finally released. That is probably not
going to happen very soon, though, so I have some time. If motivation suffices,
I will probably also improve the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;stage&lt;/span&gt;&lt;/code&gt; game library that µGame uses, and
create more ready-to-use resources for it.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="kubik-and-tote"&gt;
&lt;h3&gt;Kubik and Tote&lt;/h3&gt;
&lt;p&gt;While the homebrew game consoles took most of my free time last year, this year
I want to come back to my robots for a bit. In particular, I want to finish the
design and programming of ESP8266-based version of &lt;a class="reference external" href="http://tote.rtfd.io"&gt;Tote&lt;/a&gt;, and to finish the Kubik M0 robot (possibly switching
it to NRF52 in the process). There is also a number of old robots I would like
to re-visit and finish, such as the &lt;a class="reference external" href="https://hackaday.io/project/7168-logicoma-kun"&gt;Logicoma-kun&lt;/a&gt;, &lt;a class="reference external" href="https://hackaday.io/project/10665-pony-bot"&gt;Pony Bot&lt;/a&gt;, and &lt;a class="reference external" href="https://hackaday.io/project/10534-hexapod-henk-mkii"&gt;Henk the Hexapod&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also need to explore more better ways of doing inverse kinematics,
interpreting accelerometer output, reacting to touch sensors on the legs, and
possibly also to force sensors in the joints and complaint motion.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="badges-and-wearables"&gt;
&lt;h3&gt;Badges and Wearables&lt;/h3&gt;
&lt;p&gt;The CircuitPython Badge project is suspended, as the people who wanted to work
with me to get it to conferences gave up on it, but if there is a Python
conference that wants it, I might work on it again.&lt;/p&gt;
&lt;p&gt;I also have this wearable hub prototype, for which I want to make some
interactive jewelry and accessories. No idea about anything specific yet, but I
think I will have cat ears for sure, at the least. Maybe also a video pendant.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="circuitpython-development"&gt;
&lt;h2&gt;CircuitPython Development&lt;/h2&gt;
&lt;section id="textmode-library"&gt;
&lt;h3&gt;TextMode Library&lt;/h3&gt;
&lt;p&gt;I really want to write a CircuitPython library that would let you do something
like the old DOS text mode display, and that would support a variety of
different displays and fonts. I already have some prototypes for OLED and TFT
displays, but I need to sit down and bring it all together with a consistent
API.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="built-in-display-support"&gt;
&lt;h3&gt;Built-in Display Support&lt;/h3&gt;
&lt;p&gt;I’m waiting with bated breath for the built-in support for displays that is
being worked on. It will not only make it trivially easy to display the errors
and the REPL console on any display connected to CircuitPython boards, but also
let do high-performance graphic operations, and create games like on the µGame.
This is probably also a prerequisite for that game console board to be released
by Adafruit, so I really can’t wait for it.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="wireless-communication"&gt;
&lt;h3&gt;Wireless Communication&lt;/h3&gt;
&lt;p&gt;There is a new library for using ESP8266 as a WiFi module in the AT mode, but
also some improvement to the RFM9x module support, and of course support for
NRF52 chips means there is Bluetooth support coming. I’m really looking forward
to being able to use any of those in CircuitPython, and I hope that the coming
year will bring a standardised and consistent API for wireless communication.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="crazy-project-ideas"&gt;
&lt;h2&gt;Crazy Project Ideas&lt;/h2&gt;
&lt;section id="speech-synthesizer"&gt;
&lt;h3&gt;Speech Synthesizer&lt;/h3&gt;
&lt;p&gt;The same speech synthesizer that is used to make the Micro:bit talk should be
very easy to port to CircuitPython, and should even have much better sound
quality by using the DAC.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="speech-recognition"&gt;
&lt;h3&gt;Speech Recognition&lt;/h3&gt;
&lt;p&gt;At the same time, it might be possible to use the stronger M4 boards to do
trigger word recognition, using the same algorithm as the Snowboy program for
Raspberry Pi. This requires a lot of knowledge and patience that I don’t have,
but it could be potentially very useful project.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;That’s all I have right now. As you can see, there is a lot of hope and very
few promises. That’s because the trend in the recent years is for me to have
less and less time and motivation for my projects. Perhaps the trend will
reverse at some point, but until then I try to not plan ahead too much.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="http://dopieralski.pl/posts/2019-01-04-circuitpython/" rel="alternate"/>
    <summary>Adafruit has requested on their blog
feedback and comments about CircuitPython in 2019, so here I go. I am mostly
going to talk about three things: the projects that I personally want to do
using it, the ongoing developments that I would love to see finished this year,
and some completely crazy stuff that could potentially be added if someone
smarter than me and with copious free time worked on it.</summary>
    <published>2019-01-04T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://dopieralski.pl/posts/2019-03-26-boredom/</id>
    <title>Boredom</title>
    <updated>2019-03-26T00:00:00+01:00</updated>
    <content type="html">&lt;section id="boredom"&gt;

&lt;p&gt;Would you like to be more creative? More eloquent in conversations? More
intelligent in decision making? Better at problem solving? More attentive? Able
to read those difficult books? Focus deeply on the project at hand? There is a
simple solution for all this: embrace boredom.&lt;/p&gt;
&lt;p&gt;It takes some effort and training, but I can assure you that it certainly is
worth it. Whenever you are waiting, whenever you don’t have anything urgent to
do, whenever you don’t particularly feel like doing something, just be bored.
Forget about taking out your phone and mindlessly scrolling through the social
network stream, frantically checking your messages, or playing silly games
designed to get you addicted to them. Just stay there and think about whatever
comes to your mind: that conversation you had last week with a friend about
morality, that book you are reading, that project you were planning to start,
what you will tell the person you are waiting for when they arrive, what you
will do next, etc. — it doesn’t really matter what you think about, just let
your mind wander.&lt;/p&gt;
&lt;p&gt;The effect of this? You will have more motivation to actually work on that
project, you will understand the book better, you will have interesting things
to say in the next conversation, you will enjoy your time with that person
more, and so on. Because your mind will have done some of the work up front and
will be prepared. Because you will also think about things that you wouldn’t
notice otherwise. Because you will be more rested and ready to pay more
attention to the here and now.&lt;/p&gt;
&lt;p&gt;Obviously, this is not a silver bullet. It doesn’t work when you are tired,
depressed, stressed and burned out: you have to make sure you take care of your
sleep deprivation, depression and anxiety first — don’t be afraid to talk to a
doctor about them, they are often very easily cured. But once you have that
under control, make sure to leave yourself as much time as possible for doing
absolutely nothing. Literally staring at a wall. It will make everything else
you do much better.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://dopieralski.pl/posts/2019-03-26-boredom/" rel="alternate"/>
    <summary>Would you like to be more creative? More eloquent in conversations? More
intelligent in decision making? Better at problem solving? More attentive? Able
to read those difficult books? Focus deeply on the project at hand? There is a
simple solution for all this: embrace boredom.</summary>
    <published>2019-03-26T00:00:00+01:00</published>
  </entry>
</feed>
